/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package ui_library;

import controllers.NguoiDungController;
import java.awt.Color;
import java.awt.HeadlessException;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTextField;

/**
 *
 * @author admin
 */
public class frmDangKy extends javax.swing.JFrame {

    
   
    //Ham xoa cac TextField 
    private void setNull() { 
        //Xoa trang cac JtextField 
        this.txtFullName.setText(null); 
        this.txtSdt.setText(null);
        this.txtMatKhau.setText(null); 
        this.txtFullName.requestFocus(); 
    }
    /**
     * Creates new form frmDangKy
     * @throws java.sql.SQLException
     */
    public frmDangKy() throws SQLException {
        initComponents();
        // can giua cho form
        this.setLocationRelativeTo(null);
        
        lblWname.setVisible(false);
        lblWtk.setVisible(false);
        lblWmk.setVisible(false);
        lblWtkExist.setVisible(false);
        lblWmk2.setVisible(false);
        lblWsdt.setVisible(false);
        lblWsdt1.setVisible(false);
        
        
         // Cài đặt biểu tượng show/hide mật khẩu
        lblShowMK.setVisible(true); // Hiển thị biểu tượng mở mắt ban đầu
        lblHideMK.setVisible(false); // Ẩn biểu tượng đóng mắt ban đầu
        // Đặt ký tự ẩn mật khẩu mặc định
        txtMatKhau.setEchoChar('*');
        lblShowMK1.setVisible(true); // Hiển thị biểu tượng mở mắt ban đầu
        lblHideMK1.setVisible(false); // Ẩn biểu tượng đóng mắt ban đầu
        // Đặt ký tự ẩn mật khẩu mặc định
        txtMatKhau1.setEchoChar('*');
        
        lblReLoad.setOpaque(true); // Cho phép JLabel có background
        lblReLoad.setBackground(new java.awt.Color(137,196,244));
        lblMinFrm.setOpaque(true); // Cho phép JLabel có background
        lblMinFrm.setBackground(new java.awt.Color(137,196,244)); // Màu nền ban đầu
        lblClose.setOpaque(true);
        lblClose.setBackground(new java.awt.Color(137,196,244));
        
        
    }
    private void addPlaceholder(JTextField textField, String placeholder) {
        textField.setText(placeholder);
        textField.setForeground(Color.GRAY); // Gợi ý hiển thị màu nhạt

        textField.addFocusListener(new java.awt.event.FocusListener() {
            @Override
            public void focusGained(java.awt.event.FocusEvent e) {
                if (textField.getText().equals(placeholder)) {
                    textField.setText("");
                    textField.setForeground(Color.BLACK); // Đổi về màu bình thường khi người dùng nhập
                }
            }

            @Override
            public void focusLost(java.awt.event.FocusEvent e) {
                if (textField.getText().isEmpty()) {
                    textField.setText(placeholder);
                    textField.setForeground(Color.GRAY); // Đổi về màu placeholder khi trống
                }
            }
        });
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlSignIn = new javax.swing.JPanel();
        lblHeader = new javax.swing.JLabel();
        lblReview = new javax.swing.JLabel();
        lblTaiKhoan = new javax.swing.JLabel();
        lblTKic = new javax.swing.JLabel();
        lblPasswordIc = new javax.swing.JLabel();
        txtSdt = new javax.swing.JTextField();
        btnDangki = new javax.swing.JButton();
        lblResult = new javax.swing.JLabel();
        lblPassword = new javax.swing.JLabel();
        txtMatKhau = new javax.swing.JPasswordField();
        btnDangNhap = new javax.swing.JButton();
        txtFullName = new javax.swing.JTextField();
        lblNameu = new javax.swing.JLabel();
        lblPassword1 = new javax.swing.JLabel();
        txtMatKhau1 = new javax.swing.JPasswordField();
        lblPasswordIc1 = new javax.swing.JLabel();
        lblsdtIc = new javax.swing.JLabel();
        lblSdt = new javax.swing.JLabel();
        lblHideMK = new javax.swing.JLabel();
        lblShowMK = new javax.swing.JLabel();
        lblShowMK1 = new javax.swing.JLabel();
        lblHideMK1 = new javax.swing.JLabel();
        txtTaiKhoan1 = new javax.swing.JTextField();
        lblMinFrm = new javax.swing.JLabel();
        lblClose = new javax.swing.JLabel();
        lblReLoad = new javax.swing.JLabel();
        lblName2 = new javax.swing.JLabel();
        lblWname = new javax.swing.JLabel();
        lblWmk = new javax.swing.JLabel();
        lblWmk2 = new javax.swing.JLabel();
        lblWsdt = new javax.swing.JLabel();
        lblWtkExist = new javax.swing.JLabel();
        lblWtk = new javax.swing.JLabel();
        lblWsdt1 = new javax.swing.JLabel();
        pnlWelcome = new javax.swing.JPanel();
        lblWel = new javax.swing.JLabel();
        lblPic = new javax.swing.JLabel();
        lblCome = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setMaximumSize(new java.awt.Dimension(2147, 2147));
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        pnlSignIn.setBackground(new java.awt.Color(137, 196, 244));
        pnlSignIn.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        pnlSignIn.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblHeader.setFont(new java.awt.Font("Roboto", 1, 28)); // NOI18N
        lblHeader.setForeground(new java.awt.Color(5, 12, 156));
        lblHeader.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblHeader.setText("Đăng ký thành viên");
        pnlSignIn.add(lblHeader, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 30, -1, 50));

        lblReview.setFont(new java.awt.Font("Roboto", 2, 16)); // NOI18N
        lblReview.setForeground(new java.awt.Color(53, 114, 239));
        lblReview.setText("Tham gia cộng đồng yêu sách của chúng tôi");
        pnlSignIn.add(lblReview, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 69, -1, 40));

        lblTaiKhoan.setFont(new java.awt.Font("Roboto", 1, 18)); // NOI18N
        lblTaiKhoan.setForeground(new java.awt.Color(5, 12, 156));
        lblTaiKhoan.setText("Tên tài khoản:");
        pnlSignIn.add(lblTaiKhoan, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 220, 298, 25));

        lblTKic.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTKic.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/ic_Account.png"))); // NOI18N
        pnlSignIn.add(lblTKic, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 240, 32, 32));

        lblPasswordIc.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/ic-key.png"))); // NOI18N
        pnlSignIn.add(lblPasswordIc, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 330, 32, 32));

        txtSdt.setBackground(new java.awt.Color(137, 196, 244));
        txtSdt.setFont(new java.awt.Font("Roboto", 0, 18)); // NOI18N
        txtSdt.setForeground(new java.awt.Color(40, 67, 135));
        txtSdt.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(40, 67, 135)));
        txtSdt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSdtKeyReleased(evt);
            }
        });
        pnlSignIn.add(txtSdt, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 530, 340, 32));

        btnDangki.setBackground(new java.awt.Color(255, 102, 102));
        btnDangki.setFont(new java.awt.Font("Roboto", 1, 20)); // NOI18N
        btnDangki.setForeground(new java.awt.Color(255, 255, 255));
        btnDangki.setText("Đăng ký");
        btnDangki.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnDangki.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDangkiActionPerformed(evt);
            }
        });
        pnlSignIn.add(btnDangki, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 610, 270, 40));

        lblResult.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        lblResult.setForeground(new java.awt.Color(68, 108, 179));
        lblResult.setText("Bạn đã có tài khoản?");
        pnlSignIn.add(lblResult, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 660, 140, 24));

        lblPassword.setFont(new java.awt.Font("Roboto", 1, 18)); // NOI18N
        lblPassword.setForeground(new java.awt.Color(5, 12, 156));
        lblPassword.setText("Mật khẩu:");
        pnlSignIn.add(lblPassword, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 310, 298, 25));

        txtMatKhau.setBackground(new java.awt.Color(137, 196, 244));
        txtMatKhau.setFont(new java.awt.Font("Roboto", 0, 18)); // NOI18N
        txtMatKhau.setForeground(new java.awt.Color(40, 67, 135));
        txtMatKhau.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(40, 67, 135)));
        txtMatKhau.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtMatKhauKeyReleased(evt);
            }
        });
        pnlSignIn.add(txtMatKhau, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 340, 340, 32));

        btnDangNhap.setFont(new java.awt.Font("Roboto", 2, 16)); // NOI18N
        btnDangNhap.setForeground(new java.awt.Color(68, 108, 179));
        btnDangNhap.setText("Đăng nhập");
        btnDangNhap.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(255, 102, 102)));
        btnDangNhap.setContentAreaFilled(false);
        btnDangNhap.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnDangNhap.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnDangNhapMouseClicked(evt);
            }
        });
        pnlSignIn.add(btnDangNhap, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 660, -1, 24));

        txtFullName.setBackground(new java.awt.Color(137, 196, 244));
        txtFullName.setFont(new java.awt.Font("Roboto", 0, 18)); // NOI18N
        txtFullName.setForeground(new java.awt.Color(40, 67, 135));
        txtFullName.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(40, 67, 135)));
        txtFullName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtFullNameKeyReleased(evt);
            }
        });
        pnlSignIn.add(txtFullName, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 158, 340, 32));

        lblNameu.setFont(new java.awt.Font("Roboto", 1, 18)); // NOI18N
        lblNameu.setForeground(new java.awt.Color(5, 12, 156));
        lblNameu.setText("Họ tên người dùng:");
        pnlSignIn.add(lblNameu, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 130, 298, 25));

        lblPassword1.setFont(new java.awt.Font("Roboto", 1, 18)); // NOI18N
        lblPassword1.setForeground(new java.awt.Color(5, 12, 156));
        lblPassword1.setText("Nhập lại mật khẩu:");
        pnlSignIn.add(lblPassword1, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 410, 298, 25));

        txtMatKhau1.setBackground(new java.awt.Color(137, 196, 244));
        txtMatKhau1.setFont(new java.awt.Font("Roboto", 0, 18)); // NOI18N
        txtMatKhau1.setForeground(new java.awt.Color(40, 67, 135));
        txtMatKhau1.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(40, 67, 135)));
        txtMatKhau1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtMatKhau1KeyReleased(evt);
            }
        });
        pnlSignIn.add(txtMatKhau1, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 440, 340, 32));

        lblPasswordIc1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/ic_confirmpw.png"))); // NOI18N
        pnlSignIn.add(lblPasswordIc1, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 440, 32, 32));

        lblsdtIc.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/ic_phone32.png"))); // NOI18N
        pnlSignIn.add(lblsdtIc, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 530, 32, 32));

        lblSdt.setFont(new java.awt.Font("Roboto", 1, 18)); // NOI18N
        lblSdt.setForeground(new java.awt.Color(5, 12, 156));
        lblSdt.setText("Số điện thoại:");
        pnlSignIn.add(lblSdt, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 510, 298, 25));

        lblHideMK.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/ic_eyeclose.png"))); // NOI18N
        lblHideMK.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblHideMKMouseClicked(evt);
            }
        });
        pnlSignIn.add(lblHideMK, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 330, 32, 30));

        lblShowMK.setBackground(new java.awt.Color(255, 102, 102));
        lblShowMK.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/ic_eyeopen.png"))); // NOI18N
        lblShowMK.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblShowMKMouseClicked(evt);
            }
        });
        pnlSignIn.add(lblShowMK, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 330, 32, 30));

        lblShowMK1.setBackground(new java.awt.Color(255, 102, 102));
        lblShowMK1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/ic_eyeopen.png"))); // NOI18N
        lblShowMK1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblShowMK1MouseClicked(evt);
            }
        });
        pnlSignIn.add(lblShowMK1, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 440, 32, 30));

        lblHideMK1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/ic_eyeclose.png"))); // NOI18N
        lblHideMK1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblHideMK1MouseClicked(evt);
            }
        });
        pnlSignIn.add(lblHideMK1, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 440, 32, 30));

        txtTaiKhoan1.setBackground(new java.awt.Color(137, 196, 244));
        txtTaiKhoan1.setFont(new java.awt.Font("Roboto", 0, 18)); // NOI18N
        txtTaiKhoan1.setForeground(new java.awt.Color(40, 67, 135));
        txtTaiKhoan1.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(40, 67, 135)));
        txtTaiKhoan1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtTaiKhoan1KeyReleased(evt);
            }
        });
        pnlSignIn.add(txtTaiKhoan1, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 240, 340, 32));

        lblMinFrm.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblMinFrm.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/ic_zoom24.png"))); // NOI18N
        lblMinFrm.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblMinFrmMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lblMinFrmMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lblMinFrmMouseExited(evt);
            }
        });
        pnlSignIn.add(lblMinFrm, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 0, 40, 32));

        lblClose.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblClose.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/ic_close.png"))); // NOI18N
        lblClose.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblCloseMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lblCloseMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lblCloseMouseExited(evt);
            }
        });
        pnlSignIn.add(lblClose, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 0, 40, 32));

        lblReLoad.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblReLoad.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/ic_load.png"))); // NOI18N
        lblReLoad.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblReLoadMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lblReLoadMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lblReLoadMouseExited(evt);
            }
        });
        pnlSignIn.add(lblReLoad, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 0, 40, 32));

        lblName2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblName2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/ic-BlackUser.png"))); // NOI18N
        pnlSignIn.add(lblName2, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 158, 32, 32));

        lblWname.setFont(new java.awt.Font("Roboto", 0, 13)); // NOI18N
        lblWname.setForeground(new java.awt.Color(255, 51, 51));
        lblWname.setText("* Họ tên không được để trống");
        pnlSignIn.add(lblWname, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 190, 280, -1));

        lblWmk.setFont(new java.awt.Font("Roboto", 0, 13)); // NOI18N
        lblWmk.setForeground(new java.awt.Color(255, 51, 51));
        lblWmk.setText("* Mật khẩu không được để trống");
        pnlSignIn.add(lblWmk, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 375, 280, -1));

        lblWmk2.setFont(new java.awt.Font("Roboto", 0, 13)); // NOI18N
        lblWmk2.setForeground(new java.awt.Color(255, 51, 51));
        lblWmk2.setText("* Mật khẩu không khớp");
        pnlSignIn.add(lblWmk2, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 475, 280, -1));

        lblWsdt.setFont(new java.awt.Font("Roboto", 0, 13)); // NOI18N
        lblWsdt.setForeground(new java.awt.Color(255, 51, 51));
        lblWsdt.setText("* Số điện thoại không hợp lệ");
        pnlSignIn.add(lblWsdt, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 565, 280, -1));

        lblWtkExist.setFont(new java.awt.Font("Roboto", 0, 13)); // NOI18N
        lblWtkExist.setForeground(new java.awt.Color(255, 51, 51));
        lblWtkExist.setText("* Tài khoản đã tồn tại");
        pnlSignIn.add(lblWtkExist, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 275, 280, -1));

        lblWtk.setFont(new java.awt.Font("Roboto", 0, 13)); // NOI18N
        lblWtk.setForeground(new java.awt.Color(255, 51, 51));
        lblWtk.setText("* Tài khoản không được để trống");
        pnlSignIn.add(lblWtk, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 275, 280, -1));

        lblWsdt1.setFont(new java.awt.Font("Roboto", 0, 13)); // NOI18N
        lblWsdt1.setForeground(new java.awt.Color(255, 51, 51));
        lblWsdt1.setText("* Số điện thoại không được để trống");
        pnlSignIn.add(lblWsdt1, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 565, 280, -1));

        getContentPane().add(pnlSignIn, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 0, 550, 720));

        pnlWelcome.setBackground(new java.awt.Color(255, 255, 255));
        pnlWelcome.setBorder(javax.swing.BorderFactory.createMatteBorder(3, 3, 3, 0, new java.awt.Color(137, 196, 244)));
        pnlWelcome.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblWel.setFont(new java.awt.Font("Roboto", 1, 45)); // NOI18N
        lblWel.setForeground(new java.awt.Color(5, 12, 156));
        lblWel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblWel.setText("CHÀO MỪNG BẠN");
        pnlWelcome.add(lblWel, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 80, 450, 50));

        lblPic.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblPic.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/signup-library.png"))); // NOI18N
        pnlWelcome.add(lblPic, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 210, 480, 490));

        lblCome.setFont(new java.awt.Font("Roboto", 1, 30)); // NOI18N
        lblCome.setForeground(new java.awt.Color(5, 12, 156));
        lblCome.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblCome.setText(" ĐẾN VỚI THẾ GIỚI SÁCH");
        pnlWelcome.add(lblCome, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 140, 450, 50));

        getContentPane().add(pnlWelcome, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 550, 720));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnDangNhapMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnDangNhapMouseClicked
        try {
            // TODO add your handling code here:
            frmDangnhap login = new frmDangnhap();
            login.setVisible(true);
            this.dispose();
        } catch (SQLException ex) {
            Logger.getLogger(frmDangKy.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnDangNhapMouseClicked
     private String hidePhoneNumber(String phoneNumber) {
        return phoneNumber.substring(0, 3) + "****" + phoneNumber.substring(7);
    }
     
    // Phương thức kiểm tra tên tài khoản hợp lệ 
    private boolean isValidUsername(String username) { 
        // Quy tắc: ít nhất 3 ký tự, không quá 15 ký tự, không khoảng trắng, chỉ chứa chữ cái và số 
        return username.matches("^[a-zA-Z0-9]{3,15}$"); 
    } 
    
    // Phương thức kiểm tra mật khẩu hợp lệ 
    private boolean kiemTraMatKhauHopLe(String matKhau) {
        return matKhau.length() >= 8 && 
               matKhau.matches(".*[A-Z].*") && 
               matKhau.matches(".*[a-z].*") && 
               matKhau.matches(".*\\d.*");
    }

    private boolean isValidPhoneNumber(String phoneNumber) {
        return phoneNumber.matches("\\d{10}"); // Yêu cầu 10 chữ số
    }
    
    private void btnDangkiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDangkiActionPerformed
        // TODO add your handling code here:
        try {
            // Lấy dữ liệu từ các trường nhập
            String fullname = txtFullName.getText().trim();
            String taikhoan = txtTaiKhoan1.getText().trim();
            String matkhau = new String(txtMatKhau.getPassword());
            String xacnhanMatKhau = new String(txtMatKhau1.getPassword());
            String soDienThoai = txtSdt.getText().trim();
            boolean isValid = true;

            // Kiểm tra dữ liệu nhập vào
            // 1. Kiểm tra họ tên
            if (fullname.isEmpty()) {
                lblWname.setVisible(true);
                return;
            } 
            
            // 2. Kiểm tra username
            if (taikhoan.isEmpty()) {
                lblWtk.setVisible(true);
                return;
            }
            if (!isValidUsername(taikhoan)) {
                JOptionPane.showMessageDialog(null, "Tên tài khoản không hợp lệ (3-15 ký tự, không chứa khoảng trắng)!",
                        "Thông báo", JOptionPane.WARNING_MESSAGE);
                return;
            }
            // 3. Kiểm tra mật khẩu
            if (matkhau.isEmpty()) {
                lblWmk.setVisible(true);
                return;
            }
            /*
            if (!kiemTraMatKhauHopLe(matkhau)) {
                JOptionPane.showMessageDialog(null, "Mật khẩu phải có ít nhất 8 ký tự, chứa chữ hoa, chữ thường và số.",
                        "Thông báo", JOptionPane.WARNING_MESSAGE);
                return;
            }
            */
            // 4. Kiểm tra xác minh mật khẩu
            if (!matkhau.equals(xacnhanMatKhau)) {
                lblWmk2.setVisible(true);
                return;
            }
            // 5. Kiểm tra số điện thoại
            if (soDienThoai.trim().isEmpty()) {
                lblWsdt1.setVisible(true);
                return;
            }
            if (!isValidPhoneNumber(soDienThoai)) {
                // Ví dụ: yêu cầu số điện thoại gồm 10 chữ số
                lblWsdt.setVisible(true);
            } 

            // Chỉ tiếp tục nếu tất cả dữ liệu hợp lệ
            if (!isValid) {
                return;
            }
            // Khởi tạo controller
            NguoiDungController nguoiDungCon = new NguoiDungController();

                // Kiểm tra tài khoản đã tồn tại
                if (nguoiDungCon.kiemTraTaiKhoanTonTai(taikhoan)) {
                    lblWtkExist.setVisible(true);            
                    return;
                }

                // Đăng ký tài khoản
                boolean dangKyThanhCong = nguoiDungCon.dangKyTaiKhoan(taikhoan, matkhau, fullname, soDienThoai);

                if (dangKyThanhCong) {
                    JOptionPane.showMessageDialog(this, "Đăng ký thành công! Vui lòng đăng nhập.", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
                    // Hiển thị trang đăng nhập
                    frmDangnhap loginForm = new frmDangnhap();
                    loginForm.setVisible(true);
                    this.dispose(); // Đóng form đăng ký
                } else {
                    JOptionPane.showMessageDialog(null, "Đăng ký thất bại. Vui lòng thử lại.", "Thông báo", JOptionPane.WARNING_MESSAGE);
                }
        } catch (HeadlessException | SQLException ex) {
            JOptionPane.showMessageDialog(this, "Đã xảy ra lỗi: " + ex.getMessage(), "Lỗi", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnDangkiActionPerformed

    private void lblShowMKMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblShowMKMouseClicked
        // TODO add your handling code here:
        txtMatKhau.setEchoChar((char) 0); // Hiển thị mật khẩu
        lblShowMK.setVisible(false); // Ẩn biểu tượng mở mắt
        lblHideMK.setVisible(true); // Hiển thị biểu tượng đóng mắt
    }//GEN-LAST:event_lblShowMKMouseClicked

    private void lblHideMKMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblHideMKMouseClicked
        // TODO add your handling code here:
        // Ẩn mật khẩu (trở về dạng ***)
        txtMatKhau.setEchoChar('*'); // Ẩn mật khẩu (dạng ***)
        lblShowMK.setVisible(true); // Hiển thị biểu tượng mở mắt
        lblHideMK.setVisible(false); // Ẩn biểu tượng đóng mắt

    }//GEN-LAST:event_lblHideMKMouseClicked

    private void lblShowMK1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblShowMK1MouseClicked
        // TODO add your handling code here:
        txtMatKhau1.setEchoChar((char) 0); // Hiển thị mật khẩu
        lblShowMK1.setVisible(false); // Ẩn biểu tượng mở mắt
        lblHideMK1.setVisible(true); // Hiển thị biểu tượng đóng mắt
    }//GEN-LAST:event_lblShowMK1MouseClicked

    private void lblHideMK1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblHideMK1MouseClicked
        // TODO add your handling code here:
        // Ẩn mật khẩu (trở về dạng ***)
        txtMatKhau1.setEchoChar('*'); // Ẩn mật khẩu (dạng ***)
        lblShowMK1.setVisible(true); // Hiển thị biểu tượng mở mắt
        lblHideMK1.setVisible(false); // Ẩn biểu tượng đóng mắt

    }//GEN-LAST:event_lblHideMK1MouseClicked

    private void lblMinFrmMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblMinFrmMouseClicked
        // TODO add your handling code here:
        // Thu nhỏ form lại
        this.setState(javax.swing.JFrame.ICONIFIED);
    }//GEN-LAST:event_lblMinFrmMouseClicked

    private void lblMinFrmMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblMinFrmMouseEntered
        // TODO add your handling code here:
        lblMinFrm.setBackground(new java.awt.Color(238, 238, 238));
    }//GEN-LAST:event_lblMinFrmMouseEntered

    private void lblMinFrmMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblMinFrmMouseExited
        // TODO add your handling code here:
        lblMinFrm.setBackground(new java.awt.Color(137,196,244));
    }//GEN-LAST:event_lblMinFrmMouseExited

    private void lblCloseMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblCloseMouseClicked
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_lblCloseMouseClicked

    private void lblCloseMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblCloseMouseEntered
        // TODO add your handling code here:
        lblClose.setBackground(new java.awt.Color(255,102,102));
    }//GEN-LAST:event_lblCloseMouseEntered

    private void lblCloseMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblCloseMouseExited
        // TODO add your handling code here:
        lblClose.setBackground(new java.awt.Color(137,196,244));
    }//GEN-LAST:event_lblCloseMouseExited

    private void lblReLoadMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblReLoadMouseClicked
        // TODO add your handling code here:
        txtFullName.setText("");
        txtTaiKhoan1.setText("");
        txtMatKhau.setText("");
        txtMatKhau1.setText("");
        txtSdt.setText("");
    }//GEN-LAST:event_lblReLoadMouseClicked

    private void txtFullNameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtFullNameKeyReleased
        // TODO add your handling code here:
        String fullname = txtFullName.getText().trim();
        // Kiểm tra điều kiện tên tài khoản 
        // Nếu tài khoản không rỗng, ẩn lblWtk
        if (!fullname.isEmpty()) {
            lblWname.setVisible(false);           
        } else {
            lblWname.setVisible(true); 
        } 
    }//GEN-LAST:event_txtFullNameKeyReleased

    private void txtTaiKhoan1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTaiKhoan1KeyReleased
        // TODO add your handling code here:
        String taikhoan = txtTaiKhoan1.getText().trim();
        // Kiểm tra điều kiện tên tài khoản 
        // Nếu tài khoản không rỗng, ẩn lblWtk
        if (!taikhoan.isEmpty()) {
            lblWtk.setVisible(false);  // Ẩn lblWtk nếu tài khoản đã được nhập            
        } else {
            lblWtk.setVisible(true);   // Hiển thị lblWtk nếu tài khoản vẫn rỗng
            lblWtkExist.setVisible(false);
        } 
    }//GEN-LAST:event_txtTaiKhoan1KeyReleased

    private void txtMatKhauKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMatKhauKeyReleased
        // TODO add your handling code here:
        String matkhau = new String(txtMatKhau.getPassword()).trim();
        
        // Nếu tài khoản không rỗng, ẩn lblWtk
        if (!matkhau.isEmpty()) {
            lblWmk.setVisible(false);  // Ẩn lblWtk nếu tài khoản đã được nhập
            
        } else {
            lblWmk.setVisible(true);   // Hiển thị lblWtk nếu tài khoản vẫn rỗng
        }
    }//GEN-LAST:event_txtMatKhauKeyReleased

    private void txtMatKhau1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMatKhau1KeyReleased
        // TODO add your handling code here:
        String matkhau = new String(txtMatKhau.getPassword());
        String xacnhanMatKhau = new String(txtMatKhau1.getPassword());
        if (matkhau.equals(xacnhanMatKhau)) {
                lblWmk2.setVisible(false);
        }else{
            lblWmk2.setVisible(true);
        }
    }//GEN-LAST:event_txtMatKhau1KeyReleased

    private void txtSdtKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSdtKeyReleased
        // TODO add your handling code here:
        String soDienThoai = txtSdt.getText().trim();

         if (soDienThoai.isEmpty()) {
            lblWsdt1.setVisible(true); // Hiển thị cảnh báo nếu trống
            lblWsdt.setVisible(false); // Ẩn cảnh báo không hợp lệ
        } else if (!isValidPhoneNumber(soDienThoai)) {
            lblWsdt1.setVisible(false); // Ẩn cảnh báo trống
            lblWsdt.setVisible(true);  // Hiển thị cảnh báo không hợp lệ
        } else {
            lblWsdt1.setVisible(false); // Ẩn cả hai cảnh báo khi hợp lệ
            lblWsdt.setVisible(false);
        }
    }//GEN-LAST:event_txtSdtKeyReleased

    private void lblReLoadMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblReLoadMouseEntered
        // TODO add your handling code here:
        lblReLoad.setBackground(new java.awt.Color(238, 238, 238));
    }//GEN-LAST:event_lblReLoadMouseEntered

    private void lblReLoadMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblReLoadMouseExited
        // TODO add your handling code here:
        lblReLoad.setBackground(new java.awt.Color(137,196,244));
    }//GEN-LAST:event_lblReLoadMouseExited

    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    //javax.swing.UIManager.setLookAndFeel(javax.swing.UIManager.getSystemLookAndFeelClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmDangKy.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            try {
                new frmDangKy().setVisible(true);
            } catch (SQLException ex) {
                Logger.getLogger(frmDangKy.class.getName()).log(Level.SEVERE, null, ex);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDangNhap;
    private javax.swing.JButton btnDangki;
    private javax.swing.JLabel lblClose;
    private javax.swing.JLabel lblCome;
    private javax.swing.JLabel lblHeader;
    private javax.swing.JLabel lblHideMK;
    private javax.swing.JLabel lblHideMK1;
    private javax.swing.JLabel lblMinFrm;
    private javax.swing.JLabel lblName2;
    private javax.swing.JLabel lblNameu;
    private javax.swing.JLabel lblPassword;
    private javax.swing.JLabel lblPassword1;
    private javax.swing.JLabel lblPasswordIc;
    private javax.swing.JLabel lblPasswordIc1;
    private javax.swing.JLabel lblPic;
    private javax.swing.JLabel lblReLoad;
    private javax.swing.JLabel lblResult;
    private javax.swing.JLabel lblReview;
    private javax.swing.JLabel lblSdt;
    private javax.swing.JLabel lblShowMK;
    private javax.swing.JLabel lblShowMK1;
    private javax.swing.JLabel lblTKic;
    private javax.swing.JLabel lblTaiKhoan;
    private javax.swing.JLabel lblWel;
    private javax.swing.JLabel lblWmk;
    private javax.swing.JLabel lblWmk2;
    private javax.swing.JLabel lblWname;
    private javax.swing.JLabel lblWsdt;
    private javax.swing.JLabel lblWsdt1;
    private javax.swing.JLabel lblWtk;
    private javax.swing.JLabel lblWtkExist;
    private javax.swing.JLabel lblsdtIc;
    private javax.swing.JPanel pnlSignIn;
    private javax.swing.JPanel pnlWelcome;
    private javax.swing.JTextField txtFullName;
    private javax.swing.JPasswordField txtMatKhau;
    private javax.swing.JPasswordField txtMatKhau1;
    private javax.swing.JTextField txtSdt;
    private javax.swing.JTextField txtTaiKhoan1;
    // End of variables declaration//GEN-END:variables
}
