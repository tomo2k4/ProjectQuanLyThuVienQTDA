/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package ui_library;

import controllers.SachMuonController;
import java.awt.Color;
import java.awt.Font;
import java.awt.HeadlessException;
import java.awt.Insets;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.BorderFactory;
import javax.swing.JOptionPane;
import javax.swing.border.Border;
import javax.swing.table.DefaultTableModel;
import models.SachMuonModel;

/**
 *
 * @author admin
 */
public final class QlTraSach extends javax.swing.JDialog {

    /**
     * Creates new form QlTraSach
     */
    // Khai báo tableModel
    private final DefaultTableModel tableModel;
    private final SachMuonController sachmuon;
    
    
    public QlTraSach(java.awt.Frame parent, boolean modal) throws SQLException {
        super(parent, modal);
        initComponents();
        // can giua cho form     
        this.setLocationRelativeTo(null);
        setupUI();
        sachmuon = new SachMuonController();
        // Cấu hình bảng và controller
        tableModel = (DefaultTableModel) tblSachMuon.getModel();
        // Khởi tạo các components trên JFrame
        String[] colsName = {"Tên sách","Tên độc giả", "Ngày mượn","Ngày trả","Mô tả"};
        // đặt tiêu đề cột cho tableModel
        tableModel.setColumnIdentifiers(colsName);
        // Kết nối JTable với tableModel
        tblSachMuon.setModel(tableModel);
        // Gọi hàm showDataOnTable() để hiển thị dữ liệu lên bảng
        ShowData();
        
        insertCmbtrangthai();
        
        
    }
    private void setupUI(){
        //this.setSize(1400,725);
        // tao vien xam cho khung panel
        Border panelHeaderBorder = BorderFactory.createMatteBorder(3, 3, 3, 3, new Color(255, 255, 255));
        
        // thiet ke cho hang tren dau cua bang
        tblSachMuon.getTableHeader().setBackground(new Color(103,65,114)); 
        tblSachMuon.getTableHeader().setForeground(Color.white);
        tblSachMuon.getTableHeader().setFont(new Font("Verdana", Font.BOLD, 12));
        tblSachMuon.getTableHeader().setOpaque(false);

        tblSachMuon.getTableHeader().repaint();
       
        tblSachMuon.getColumnModel().getColumn(0).setPreferredWidth(20);
        tblSachMuon.getColumnModel().getColumn(3).setPreferredWidth(40);
        tblSachMuon.getColumnModel().getColumn(4).setPreferredWidth(40);
        
        txtmota.setLineWrap(true); // Tự động xuống dòng
        txtmota.setWrapStyleWord(true); // Ngắt từ hợp lý
        txtmota.setMargin(new Insets(10, 10, 10, 5)); // Khoảng cách nội dung với biên

    }
    public void ShowData() throws SQLException{ 
        List<SachMuonModel> lst = sachmuon.getdsSachMuon();
        // Duyệt qua ArrayList data
        Object[] rows = new Object[5];
        for(int i =0; i< lst.size() ; i++){
            rows[0] = lst.get(i).getTenSach();
            rows[1] = lst.get(i).getHoten();
            rows[2] = lst.get(i).getNgaymuon();
            rows[3] = lst.get(i).getNgaytra();
            rows[4] = lst.get(i).getMota();
            // Đưa dòng dữ liệu vào tableModel
            tableModel.addRow(rows);
        }     
    }
    
    //Ham xoa du lieu trong tableModel 
    public void ClearData() throws SQLException{ 
        int rowCount = tableModel.getRowCount(); // Lấy số lượng dòng hiện tại
        for (int i = rowCount - 1; i >= 0; i--) {
            tableModel.removeRow(i); // Xóa từng dòng
        }
    } 
    
    // Phương thức tải dữ liệu giới tính vào ComboBox
    public void insertCmbtrangthai() { 
        cmbStatus.removeAllItems(); // Xóa dữ liệu cũ 
        cmbStatus.addItem("Chọn trạng thái"); // Thêm mục mặc định
        cmbStatus.addItem("Tất cả"); 
        cmbStatus.addItem("Đang mượn");
        cmbStatus.addItem("Đã hoàn");         
        cmbStatus.addItem("Thất lạc"); 
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblTtinSach1 = new javax.swing.JLabel();
        lblTtinSach = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        txtMas = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        txtmadg = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        datemuon = new com.toedter.calendar.JDateChooser();
        jLabel12 = new javax.swing.JLabel();
        datetra = new com.toedter.calendar.JDateChooser();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtmota = new javax.swing.JTextArea();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblSachMuon = new javax.swing.JTable();
        btnMatSach = new javax.swing.JButton();
        btnTraSach = new javax.swing.JButton();
        jLabel13 = new javax.swing.JLabel();
        cmbStatus = new javax.swing.JComboBox<>();
        btnHuy = new javax.swing.JButton();
        jLabel14 = new javax.swing.JLabel();
        txtSach = new javax.swing.JTextField();
        txtMadg1 = new javax.swing.JTextField();
        pnlHeader = new javax.swing.JPanel();
        lblTieude = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        lblSystemIC1 = new javax.swing.JLabel();
        btnTimsach = new javax.swing.JButton();
        btnTimdocgia = new javax.swing.JButton();
        lblDocGia = new javax.swing.JLabel();
        lblSach = new javax.swing.JLabel();

        lblTtinSach1.setFont(new java.awt.Font("Roboto", 1, 16)); // NOI18N
        lblTtinSach1.setForeground(new java.awt.Color(190, 144, 212));
        lblTtinSach1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblTtinSach1.setText("Tên sách");
        lblTtinSach1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblTtinSach1MouseClicked(evt);
            }
        });

        lblTtinSach.setFont(new java.awt.Font("Roboto", 1, 16)); // NOI18N
        lblTtinSach.setForeground(new java.awt.Color(190, 144, 212));
        lblTtinSach.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblTtinSach.setText("Tên độc giả");
        lblTtinSach.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblTtinSachMouseClicked(evt);
            }
        });

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 3, 3, 3, new java.awt.Color(103, 65, 114)));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txtMas.setFont(new java.awt.Font("Roboto", 0, 16)); // NOI18N
        txtMas.setForeground(new java.awt.Color(103, 65, 114));
        txtMas.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(103, 65, 114)));
        txtMas.setEnabled(false);
        jPanel1.add(txtMas, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 80, 30, 32));

        jLabel10.setFont(new java.awt.Font("Roboto", 1, 18)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(103, 65, 114));
        jLabel10.setText("Ngày mượn:");
        jPanel1.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 250, 110, 32));

        txtmadg.setFont(new java.awt.Font("Roboto", 0, 16)); // NOI18N
        txtmadg.setForeground(new java.awt.Color(103, 65, 114));
        txtmadg.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(103, 65, 114)));
        jPanel1.add(txtmadg, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 170, 140, 32));

        jLabel11.setFont(new java.awt.Font("Roboto", 1, 20)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(103, 65, 114));
        jLabel11.setText("Trạng thái sách:");
        jPanel1.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 75, 150, 32));

        datemuon.setForeground(new java.awt.Color(103, 65, 114));
        datemuon.setFont(new java.awt.Font("Roboto", 0, 16)); // NOI18N
        jPanel1.add(datemuon, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 250, 200, 32));

        jLabel12.setFont(new java.awt.Font("Roboto", 1, 18)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(103, 65, 114));
        jLabel12.setText("Ngày mượn:");
        jPanel1.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 320, 110, 32));

        datetra.setForeground(new java.awt.Color(103, 65, 114));
        datetra.setFont(new java.awt.Font("Roboto", 0, 16)); // NOI18N
        jPanel1.add(datetra, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 320, 200, 32));

        jLabel2.setFont(new java.awt.Font("Roboto", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(103, 65, 114));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setText("Mô tả: ");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 380, 100, 32));

        txtmota.setColumns(20);
        txtmota.setFont(new java.awt.Font("Roboto", 0, 16)); // NOI18N
        txtmota.setRows(5);
        jScrollPane2.setViewportView(txtmota);

        jPanel1.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 380, 200, 70));

        jScrollPane1.setBackground(new java.awt.Color(213, 184, 255));
        jScrollPane1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        tblSachMuon.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        tblSachMuon.setForeground(new java.awt.Color(90, 34, 139));
        tblSachMuon.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Tên sách", "Tên độc giả", "Ngày mượn", "Ngày trả", "Mô tả"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, true, true, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblSachMuon.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        tblSachMuon.setGridColor(new java.awt.Color(102, 102, 102));
        tblSachMuon.setRowHeight(25);
        tblSachMuon.setSelectionBackground(new java.awt.Color(190, 144, 212));
        tblSachMuon.setShowGrid(true);
        tblSachMuon.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblSachMuonMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblSachMuon);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 120, 490, 410));

        btnMatSach.setFont(new java.awt.Font("Roboto", 1, 18)); // NOI18N
        btnMatSach.setForeground(new java.awt.Color(90, 34, 139));
        btnMatSach.setText("Thất lạc");
        btnMatSach.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnMatSach.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMatSachActionPerformed(evt);
            }
        });
        jPanel1.add(btnMatSach, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 490, 120, 32));

        btnTraSach.setFont(new java.awt.Font("Roboto", 1, 18)); // NOI18N
        btnTraSach.setForeground(new java.awt.Color(90, 34, 139));
        btnTraSach.setText("Trả sách");
        btnTraSach.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnTraSach.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTraSachActionPerformed(evt);
            }
        });
        jPanel1.add(btnTraSach, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 490, 120, 32));

        jLabel13.setFont(new java.awt.Font("Roboto", 1, 18)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(103, 65, 114));
        jLabel13.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel13.setText("Độc giả:");
        jPanel1.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 170, 80, 32));

        cmbStatus.setBackground(new java.awt.Color(190, 144, 212));
        cmbStatus.setFont(new java.awt.Font("Roboto", 0, 16)); // NOI18N
        cmbStatus.setForeground(new java.awt.Color(103, 65, 114));
        cmbStatus.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(103, 65, 114)));
        cmbStatus.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jPanel1.add(cmbStatus, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 75, 140, 32));

        btnHuy.setFont(new java.awt.Font("Roboto", 1, 18)); // NOI18N
        btnHuy.setForeground(new java.awt.Color(90, 34, 139));
        btnHuy.setText("Hủy");
        btnHuy.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnHuy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHuyActionPerformed(evt);
            }
        });
        jPanel1.add(btnHuy, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 490, 100, 32));

        jLabel14.setFont(new java.awt.Font("Roboto", 1, 18)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(103, 65, 114));
        jLabel14.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel14.setText("Sách:");
        jPanel1.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 80, 80, 32));

        txtSach.setFont(new java.awt.Font("Roboto", 0, 16)); // NOI18N
        txtSach.setForeground(new java.awt.Color(103, 65, 114));
        txtSach.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(103, 65, 114)));
        jPanel1.add(txtSach, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 80, 140, 32));

        txtMadg1.setFont(new java.awt.Font("Roboto", 0, 16)); // NOI18N
        txtMadg1.setForeground(new java.awt.Color(103, 65, 114));
        txtMadg1.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(103, 65, 114)));
        txtMadg1.setEnabled(false);
        jPanel1.add(txtMadg1, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 170, 30, 32));

        pnlHeader.setBackground(new java.awt.Color(103, 65, 114));
        pnlHeader.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblTieude.setBackground(new java.awt.Color(241, 231, 254));
        lblTieude.setFont(new java.awt.Font("Roboto", 1, 24)); // NOI18N
        lblTieude.setForeground(new java.awt.Color(255, 255, 255));
        lblTieude.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblTieude.setText("   Quản lý trả sách");
        lblTieude.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        pnlHeader.add(lblTieude, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 0, 390, 57));
        pnlHeader.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 20, 20, -1));

        lblSystemIC1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblSystemIC1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/ic_tacgia64.png"))); // NOI18N
        pnlHeader.add(lblSystemIC1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 370, 57));

        jPanel1.add(pnlHeader, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 980, -1));

        btnTimsach.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        btnTimsach.setForeground(new java.awt.Color(74, 98, 138));
        btnTimsach.setText("Tìm sách");
        btnTimsach.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnTimsach.setOpaque(true);
        btnTimsach.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTimsachActionPerformed(evt);
            }
        });
        jPanel1.add(btnTimsach, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 80, 120, 30));

        btnTimdocgia.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        btnTimdocgia.setForeground(new java.awt.Color(74, 98, 138));
        btnTimdocgia.setText("Tìm độc giả");
        btnTimdocgia.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnTimdocgia.setOpaque(true);
        btnTimdocgia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTimdocgiaActionPerformed(evt);
            }
        });
        jPanel1.add(btnTimdocgia, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 170, 130, 30));

        lblDocGia.setFont(new java.awt.Font("Roboto", 2, 16)); // NOI18N
        jPanel1.add(lblDocGia, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 205, 160, 25));

        lblSach.setFont(new java.awt.Font("Roboto", 2, 16)); // NOI18N
        jPanel1.add(lblSach, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 110, 160, 25));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 980, 560));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnTraSachActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTraSachActionPerformed
        /*
// TODO add your handling code here:
        try {
            // Kiểm tra các trường bắt buộc
            if (txtIDSach1.getText().isEmpty()) {
                JOptionPane.showMessageDialog(this, "Vui lòng nhập ID sách để trả phiếu!", "Lỗi", JOptionPane.ERROR_MESSAGE);
                return;
            }

            if (txtIDDocgia1.getText().isEmpty()) {
                JOptionPane.showMessageDialog(this, "Vui lòng nhập ID độc giả để trả phiếu!", "Lỗi", JOptionPane.ERROR_MESSAGE);
                return;
            }

            int idSach;
            int idDocGia;
            try {
                idSach = Integer.parseInt(txtIDSach1.getText());
                idDocGia = Integer.parseInt(txtIDDocgia1.getText());

                if (idSach <= 0 || idDocGia <= 0) {
                    JOptionPane.showMessageDialog(this, "ID sách và ID độc giả phải là số nguyên dương!", "Lỗi", JOptionPane.ERROR_MESSAGE);
                    return;
                }
            } catch (NumberFormatException ex) {
                JOptionPane.showMessageDialog(this, "ID sách hoặc ID độc giả không hợp lệ!", "Lỗi", JOptionPane.ERROR_MESSAGE);
                return;
            }

            // Thực hiện trả phiếu
            boolean isReturned = sachmuon.returnPhieuMuon(idSach, idDocGia);

            // Xử lý kết quả
            if (isReturned) {
                JOptionPane.showMessageDialog(this, "Trả phiếu thành công!", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(this, "Không thể trả phiếu. Vui lòng kiểm tra lại thông tin!", "Lỗi", JOptionPane.ERROR_MESSAGE);
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Lỗi cơ sở dữ liệu: " + ex.getMessage(), "Lỗi", JOptionPane.ERROR_MESSAGE);
        } catch (HeadlessException ex) {
            JOptionPane.showMessageDialog(this, "Lỗi không xác định: " + ex.getMessage(), "Lỗi", JOptionPane.ERROR_MESSAGE);
        }
        */
    }//GEN-LAST:event_btnTraSachActionPerformed

    private void btnMatSachActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMatSachActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnMatSachActionPerformed

    private void btnHuyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHuyActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnHuyActionPerformed

    private void tblSachMuonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblSachMuonMouseClicked
        
    
    }//GEN-LAST:event_tblSachMuonMouseClicked

    private void lblTtinSach1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblTtinSach1MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_lblTtinSach1MouseClicked

    private void lblTtinSachMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblTtinSachMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_lblTtinSachMouseClicked

    private void btnTimsachActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTimsachActionPerformed
        // TODO add your handling code here:
        // Lấy ID sách từ txtMas
        /*
        String input = txtSach.getText().trim();

        // Kiểm tra nếu ID sách không hợp lệ
        if (input.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Vui lòng nhập mã sách hoặc tên sách để tìm kiếm!", "Thông báo", JOptionPane.WARNING_MESSAGE);
            return;
        }

        try {
            SachMuonModel sach = null;

            if (input.matches("\\d+")) {
                // Tìm theo mã sách
                sach = sachmuon.getSachById(Integer.parseInt(input));
            } else {
                // Tìm theo tên sách
                sach = sachmuon.getSachByTen(input);
            }

            if (sach != null) {
                txtIDSach1.setText(sach.getIdSach());
                txtTensach.setText(sach.getTenSach());
                txtTacgia.setText(sach.getTenTacGia());
                txtSoluong.setText(String.valueOf(sach.getSoLuong()));
            } else {
                JOptionPane.showMessageDialog(this, "Không tìm thấy sách với thông tin: " + input, "Thông báo", JOptionPane.WARNING_MESSAGE);
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Lỗi khi tìm sách: " + e.getMessage(), "Lỗi", JOptionPane.ERROR_MESSAGE);
        }
        */
    }//GEN-LAST:event_btnTimsachActionPerformed

    private void btnTimdocgiaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTimdocgiaActionPerformed
        // TODO add your handling code here:
        /*
        String input = txtmadg.getText().trim();

        // Kiểm tra nếu ID sách không hợp lệ
        if (input.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Vui lòng nhập mã độc giả hoặc tên độc giả để tìm kiếm!", "Thông báo", JOptionPane.WARNING_MESSAGE);
            return;
        }
        try {
            SachMuonModel docGia = null;

            // Kiểm tra xem input là mã độc giả hay họ tên
            if (input.matches("\\d+")) {
                // Nếu input là số, tìm theo mã độc giả
                int idDocGia = Integer.parseInt(input);
                docGia = sachmuon.getDocGiaById(idDocGia);
            } else {
                // Nếu input là chữ, tìm theo họ tên
                docGia = sachmuon.getDocGiaByHoTen(input);
            }

            // Kiểm tra kết quả và hiển thị thông tin
            if (docGia != null) {
                txtIDDocgia1.setText(String.valueOf(docGia.getMadocgia()));
                txtDocgia.setText(docGia.getHoten());
                txtEmail.setText(docGia.getEmail());
                txtLienhe.setText(docGia.getSodienthoai());
            } else {
                JOptionPane.showMessageDialog(this, "Không tìm thấy độc giả với thông tin: " + input, "Thông báo", JOptionPane.WARNING_MESSAGE);
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Lỗi khi tìm độc giả: " + e.getMessage(), "Lỗi", JOptionPane.ERROR_MESSAGE);
        }
        try {
            SachMuonModel docGia = null;
            if (input.matches("\\d+")) {
                // Tìm theo mã độc giả
                docGia = sachmuon.getDocGiaById(Integer.parseInt(input));
            } else {
                // Tìm theo tên độc giả
                docGia = sachmuon.getDocGiaByHoTen(input);
            }

            if (docGia != null) {
                txtIDDocgia1.setText(docGia.getMadocgia());
                txtDocgia.setText(docGia.getHoten());
                txtEmail.setText(docGia.getEmail());
                txtLienhe.setText(docGia.getSodienthoai());
            } else {
                JOptionPane.showMessageDialog(this, "Không tìm thấy độc giả với thông tin: " + input, "Thông báo", JOptionPane.WARNING_MESSAGE);
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Lỗi khi tìm độc giả: " + e.getMessage(), "Lỗi", JOptionPane.ERROR_MESSAGE);
        }
        */
    }//GEN-LAST:event_btnTimdocgiaActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    //javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    javax.swing.UIManager.setLookAndFeel(javax.swing.UIManager.getSystemLookAndFeelClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(QlTraSach.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(() -> {
            try {
                QlTraSach dialog = new QlTraSach(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            } catch (SQLException ex) {
                Logger.getLogger(QlTraSach.class.getName()).log(Level.SEVERE, null, ex);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnHuy;
    private javax.swing.JButton btnMatSach;
    private javax.swing.JButton btnTimdocgia;
    private javax.swing.JButton btnTimsach;
    private javax.swing.JButton btnTraSach;
    private javax.swing.JComboBox<String> cmbStatus;
    private com.toedter.calendar.JDateChooser datemuon;
    private com.toedter.calendar.JDateChooser datetra;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblDocGia;
    private javax.swing.JLabel lblSach;
    private javax.swing.JLabel lblSystemIC1;
    private javax.swing.JLabel lblTieude;
    private javax.swing.JLabel lblTtinSach;
    private javax.swing.JLabel lblTtinSach1;
    private javax.swing.JPanel pnlHeader;
    private javax.swing.JTable tblSachMuon;
    private javax.swing.JTextField txtMadg1;
    private javax.swing.JTextField txtMas;
    private javax.swing.JTextField txtSach;
    private javax.swing.JTextField txtmadg;
    private javax.swing.JTextArea txtmota;
    // End of variables declaration//GEN-END:variables
}
